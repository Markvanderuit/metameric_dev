#include <preamble.glsl>
#include <math.glsl>
#include <moments.glsl>
#include <spectrum.glsl>

// General layout rule declarations
layout(local_size_x = 256) in;
layout(std140) uniform;
layout(std430) buffer;

// Specialization constant declarations
layout(constant_id = 0) const uint n = 1;

// Shader storage declaration
layout(binding = 0) restrict readonly  buffer b_in  { uvec4 data; } in_buffer;
layout(binding = 1) restrict readonly  buffer b_wvl { vec4 data;  } wvl_buffer;
layout(binding = 2) restrict writeonly buffer b_out { vec4 data;  } out_buffer;

void main() {
  guard(gl_GlobalInvocationID.x == 0);
  float[moment_coeffs] tm = unpack_moments_12x10(in_buffer.data);
  out_buffer.data = moments_to_reflectance(wvl_buffer.data, tm);
}