#version 460 core

#include <guard.glsl>

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(binding = 0, std430)  restrict readonly buffer           b_0 { vec3 b_0_color_in[]; };
layout(binding = 1, rgba32f) restrict writeonly uniform image2D b_1_color_out;

layout(location = 0) uniform uvec2 u_size;

void main() {
  const uvec2 v = gl_WorkGroupID.xy * gl_WorkGroupSize.xy + gl_LocalInvocationID.xy;
  guard(min(v, u_size - 1) == v);

  imageStore(b_1_color_out, ivec2(v), vec4(b_0_color_in[u_size.x * v.y + v.x], 1));
}