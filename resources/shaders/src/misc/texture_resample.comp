#version 460 core

#include <guard.glsl>
#include <color.glsl>

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(binding = 0, rgba32f) restrict writeonly uniform image2D b_0_color_out;

layout(location = 0) uniform uvec2     u_size;
layout(location = 1) uniform sampler2D u_sampler;

void main() {
  const uvec2 i = gl_GlobalInvocationID.xy;
  guard(min(i, u_size - 1) == i);

  const vec2 p = (vec2(i) + vec2(0.5)) / vec2(u_size);
  const vec4 v = texture(u_sampler, p);

  imageStore(b_0_color_out, ivec2(i), lrgb_to_srgb(v));
}