#version 460 core

#include <guard.glsl>

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(binding = 0, rgba32f) restrict writeonly uniform image2D b_0_color_out;

layout(location = 0) uniform uvec2     u_size;
layout(location = 1) uniform sampler2D u_sampler;

void main() {
  const uvec2 v = gl_WorkGroupID.xy * gl_WorkGroupSize.xy + gl_LocalInvocationID.xy;
  guard(min(v, u_size - 1) == v);

  const vec2 p = (vec2(v) + vec2(0.5)) / vec2(u_size);

  imageStore(b_0_color_out, ivec2(v), texture(u_sampler, p));
}