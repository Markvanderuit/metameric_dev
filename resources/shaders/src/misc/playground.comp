#version 460 core

#define guard(expr) if (!(expr)) { return; }

layout(local_size_x = 256) in;
layout(std140)             uniform;
layout(std430)             buffer;

layout(binding = 0) restrict readonly  buffer b_0 { float data[]; } b_in;
layout(binding = 1) restrict writeonly buffer b_1 { float data[]; } b_out;
layout(binding = 0) uniform u_0 {
  uint  n;   
  float mult; 
} u_in;

layout(location = 0) uniform float u_mult;

void main() {
  const uint i = gl_GlobalInvocationID.x;
  guard(i < u_in.n);

  b_out.data[i] = u_in.mult * u_mult * b_in.data[i];
}