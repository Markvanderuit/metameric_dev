#version 460 core

#include <guard.glsl>
#include <color.glsl>

// General layout rule declarations
layout(local_size_x = 16, local_size_y = 16) in;
layout(std140) uniform;

// Sampler/image binding declarations
layout(binding = 0, rgba32f) uniform restrict readonly  image2D i_image_r;
layout(binding = 1, rgba32f) uniform restrict writeonly image2D i_image_w;

// Uniform buffer declaration
layout(binding = 0, std140) uniform b_uniform {
  uvec2 size;
} unif;

void main() {
  const uvec2 i = gl_GlobalInvocationID.xy;
  guard(all(lessThan(i, unif.size)));
  imageStore(i_image_w, ivec2(i), lrgb_to_srgb(imageLoad(i_image_r, ivec2(i))));
}